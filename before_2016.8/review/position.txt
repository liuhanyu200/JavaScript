1.标准文档流 Normal flow
	从上到下，从左到右，输出文档内容
	由块级元素：div ul li dl dt p h
（从左到右撑满页面，独占一行，碰到页面边缘时会自动换行）
	
	行内元素:span strong a img input
（能在同一行显示，不会改变html结构）组成。

	盒子模型：网页布局的基石，组成部分（border，margin，padding，content）
（顺时针方向---上右下左）盒子模型由 块级元素 和 行间元素 组成。
	盒子模型的3D模型，和ps里面的三维立体模型相似。

	第一层：border	第二层：padding和content
	第三层：background-image（坐标值，no-repeat）	第四层：background-color
	第五层：margin

	五层叠加后得到显示的网页。
	设置padding来控制层与层之间的水平间距

	盒子模型的尺寸 = 边框+外边距+内边距+盒子中的内容的尺寸

	页面自动居中---列布局：为要自动居中的内容加一个包裹层 wrap，固定宽{width:770px;margin:0 auto}，当然，添加了浮动、绝对定位、固定定位就不会居中。
	两列布局：父级设置清除浮动，子元素都设置float，通过设置margin来控制两列布局位置。
	
	 
2.浮动 Float（left right none）
	
	设置了浮动的元素会在它的父级容器中向左右移动，知道触碰容器为止（会受父级元素的属性影响border margin...）
	设置了浮动的元素，依然处在标准文档流中
	设置了浮动的元素如果没设置宽度，尺寸得不到扩展，会缩成一个圆点，当然，尺寸会随着内容变化而变化。
	浮动后3D模型中向最上层浮动，会覆盖下层
	浮动后，会影响紧邻其后的那个元素，元素会紧挨着它
	横向布局---float
	一般情况下，div块的高度不用设置。

	清除浮动：
	1.clear:both  clear:left  clear:right 当父包含块缩成一条的时候用这个不行，这个主要应用于紧邻其后的元素清除浮动
	2.同时设置width:100%(或者固定宽度) + overflow:hidden
	3.br 回车清除浮动（空标签无意义，不建议使用）

3.绝对定位 Absolute

	通过postion属性来实现布局
	带有遮罩效果的提示框，固定层效果，全屏广告
	position：static(默认值)/absolute/fixed/relative
	relative：相对于自身原有位置进行偏移，仍处于标准文档流中，随即拥有偏移属性和z-index（z轴堆叠属性）属性
	absolute: 建立了以包含块为基准的定位，完全脱离了标准文档流，随即拥有偏移属性和z-index（z轴堆叠属性）属性
	当一个元素设置了绝对定位，没有设置宽度时候，元素的宽度会随内容宽度而变化。
	未设置偏移量：无论是否存在已定位的祖先元素，都保持在最初始位置，脱离标准文档流
	设置偏移量：无已定位的祖先元素，以<html>为编译参照基准；有已定位的祖先元素，以最近的祖先元素为参照基准。

	使用绝对定位来实现横向两列布局：适用于一列固定宽度，一列自适应的情况。
	父元素----relative	需要自适应的列----absolute （注意：固定宽度的列高度 > 自适应宽度的列，，因为绝对定位的元素会从标准文档流中脱出，必须要一个固定高度的列来撑开父元素才能保证自适应（绝对定位）的列不从父元素中脱出）